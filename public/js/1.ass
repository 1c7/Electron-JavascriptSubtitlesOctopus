[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
Video Aspect Ratio: c1.77778
YCbCr Matrix: TV.709
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Last Style Storage: Default
Audio File: 12. AI Playing Games.mp4
Video File: 12. AI Playing Games.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.750000
Scroll Position: 276
Active Line: 290
Video Position: 13776

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: zh - 黄色,Microsoft YaHei,76,&H0080FFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,80,1
Style: en - 白色,Arial,51,&H00FFFFFF,&H000000FF,&H55000000,&H63000000,-1,0,0,0,100,100,0,0,1,4,0,2,3,3,20,1
Style: 翻译人员专属 - 左下角,微软雅黑,58,&H008DE3FF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,1,42,32,42,1
Style: 备注 - 主题,Microsoft YaHei,52,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,2,1,7,36,23,140,1
Style: 这一集的名字,微软雅黑,68,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,7,36,43,40,1
Style: 备注 - 中间,微软雅黑,56,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,3,0,8,36,23,32,1
Style: zh - 黄色 - 指数,Microsoft YaHei,56,&H0080FFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,1,0,1,3,0,2,3,3,80,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:03.00,备注 - 主题,,0,0,0,,00:00
Dialogue: 0,0:00:00.00,0:00:03.00,翻译人员专属 - 左下角,,0,0,0,,翻译: Pr1p \N 校对: 国土安全局, 糖醋陈皮
Dialogue: 0,0:00:00.00,0:00:03.00,这一集的名字,,0,0,0,,第 12 集: 人工智能玩游戏
Dialogue: 0,0:00:09.76,0:00:10.53,en - 白色,,0,0,0,,- Jabril: D7
Dialogue: 0,0:00:09.76,0:00:10.53,zh - 黄色,,0,0,0,,D7
Dialogue: 0,0:00:09.76,0:00:12.90,备注 - 中间,,0,0,0,,此处为棋盘游戏: 海战棋
Dialogue: 0,0:00:11.70,0:00:12.90,en - 白色,,0,0,0,,- John-Green-bot: Miss.
Dialogue: 0,0:00:11.70,0:00:12.90,zh - 黄色,,0,0,0,,没打中
Dialogue: 0,0:00:29.50,0:00:30.96,en - 白色,,0,0,0,,John-Green-bot: I-9
Dialogue: 0,0:00:29.50,0:00:30.96,zh - 黄色,,0,0,0,,I9
Dialogue: 0,0:00:30.96,0:00:32.21,en - 白色,,0,0,0,,Jabril: NOOOOOOOOOO
Dialogue: 0,0:00:30.96,0:00:32.21,zh - 黄色,,0,0,0,,不要啊
Dialogue: 0,0:00:41.00,0:00:43.49,en - 白色,,0,0,0,,Hey, I’m Jabril and welcome to Crash Course AI
Dialogue: 0,0:00:41.00,0:00:44.39,zh - 黄色,,0,0,0,,嘿, 我是贾布里尔, 欢迎收看人工智能速成课
Dialogue: 0,0:00:44.39,0:00:46.40,en - 白色,,0,0,0,,John-Green-bot might struggle with some things
Dialogue: 0,0:00:44.39,0:00:46.40,zh - 黄色,,0,0,0,,有些事情对 约翰•格林机器人 很难
Dialogue: 0,0:00:46.40,0:00:49.11,en - 白色,,0,0,0,,like natural language processing and moving through the real world,
Dialogue: 0,0:00:46.40,0:00:49.11,zh - 黄色,,0,0,0,,比如 自然语言处理 和 移动
Dialogue: 0,0:00:49.11,0:00:52.63,en - 白色,,0,0,0,,but using AI he’s pretty good at board games.
Dialogue: 0,0:00:49.11,0:00:52.63,zh - 黄色,,0,0,0,,但用了人工智能技术, 可以让它成为棋盘游戏大师
Dialogue: 0,0:00:52.63,0:00:57.28,en - 白色,,0,0,0,,AI researchers spend a lot of time trying to teach AI how to beat humans at games,
Dialogue: 0,0:00:52.63,0:00:57.28,zh - 黄色,,0,0,0,,研究者花了很多时间教 AI 怎么在游戏里打败人类
Dialogue: 0,0:00:57.28,0:00:59.66,en - 白色,,0,0,0,, and this isn’t just because games are fun.
Dialogue: 0,0:00:57.28,0:00:59.66,zh - 黄色,,0,0,0,,这不只是因为游戏好玩
Dialogue: 0,0:00:59.66,0:01:04.54,en - 白色,,0,0,0,,Games provide constrained scenarios for testing new AI algorithms and approaches.
Dialogue: 0,0:00:59.66,0:01:04.54,zh - 黄色,,0,0,0,,更重要的是 可以用来测新的人工智能算法
Dialogue: 0,0:01:04.54,0:01:08.00,en - 白色,,0,0,0,,In a game, it’s easy to know whether the AI is winning or losing,
Dialogue: 0,0:01:04.54,0:01:08.00,zh - 黄色,,0,0,0,,游戏里很容易判断 人工智能 是输是赢
Dialogue: 0,0:01:08.00,0:01:11.82,en - 白色,,0,0,0,,because there’s usually a score or some objective measure of “winning.”
Dialogue: 0,0:01:08.00,0:01:11.82,zh - 黄色,,0,0,0,,因为游戏一般有分数或其他指标 来衡量输赢
Dialogue: 0,0:01:11.82,0:01:16.38,en - 白色,,0,0,0,,This is great, because AI learns from examples, trying things out, and slowly improving.
Dialogue: 0,0:01:11.82,0:01:16.38,zh - 黄色,,0,0,0,,人工智能可以从实例中学习  尝试不同方案  慢慢进步
Dialogue: 0,0:01:16.38,0:01:20.47,en - 白色,,0,0,0,,Games basically provide their own training data, which is a big relief
Dialogue: 0,0:01:16.38,0:01:20.47,zh - 黄色,,0,0,0,,游戏本身提供了训练数据  这样方便很多
Dialogue: 0,0:01:21.47,0:01:24.00,en - 白色,,0,0,0,,because AI systems need lots of training data to get really good.
Dialogue: 0,0:01:21.47,0:01:24.00,zh - 黄色,,0,0,0,,因为 人工智能 需要很多训练数据才能变得厉害
Dialogue: 0,0:01:24.00,0:01:29.56,en - 白色,,0,0,0,,An AI can even play against itself to generate training data and evolve better game strategies.
Dialogue: 0,0:01:24.00,0:01:29.56,zh - 黄色,,0,0,0,,人工智能甚至能和自己玩  以生成训练数据  演化出更好的策略
Dialogue: 0,0:01:29.56,0:01:34.88,en - 白色,,0,0,0,,Or an AI can be programmed to look at previous games (even games played by expert humans)
Dialogue: 0,0:01:29.56,0:01:34.88,zh - 黄色,,0,0,0,,或者让人工智能看之前的比赛记录,  比如高手人类的比赛记录
Dialogue: 0,0:01:34.88,0:01:36.78,en - 白色,,0,0,0,,for strategies that lead to victory.
Dialogue: 0,0:01:34.88,0:01:36.78,zh - 黄色,,0,0,0,,来寻找取胜策略
Dialogue: 0,0:01:36.78,0:01:39.95,en - 白色,,0,0,0,,Comparing AIs against expert human gamers can also help us
Dialogue: 0,0:01:36.78,0:01:39.95,zh - 黄色,,0,0,0,,对比 人工智能 与 人类游戏高手 也可以帮我们理解
Dialogue: 0,0:01:39.95,0:01:42.88,en - 白色,,0,0,0,, figure out how an AI is improving over time.
Dialogue: 0,0:01:39.95,0:01:42.88,zh - 黄色,,0,0,0,,它是怎么不断改善的
Dialogue: 0,0:01:42.88,0:01:47.23,en - 白色,,0,0,0,,This comparison also gives us a sense of the difficulty of problems an AI can solve.
Dialogue: 0,0:01:42.88,0:01:47.23,zh - 黄色,,0,0,0,,帮助我们理解 人工智能 到底能解决多难的问题
Dialogue: 0,0:01:47.23,0:01:50.96,en - 白色,,0,0,0,,In other words, if I can teach John-Green-Bot to beat me at battleship,
Dialogue: 0,0:01:47.23,0:01:50.96,zh - 黄色,,0,0,0,,换句话说, 如果我能教 约翰•格林机器人 在"海战棋"中击败我
Dialogue: 0,0:01:50.96,0:01:55.67,en - 白色,,0,0,0,, I can probably also teach him to beat me at any game that’s simpler than battleship.
Dialogue: 0,0:01:50.96,0:01:55.67,zh - 黄色,,0,0,0,,其他比"海战棋"更简单的游戏, 它八成也能打败我
Dialogue: 0,0:01:55.67,0:01:59.28,en - 白色,,0,0,0,,Finally, games are cool (and that’s important too!).
Dialogue: 0,0:01:55.67,0:01:59.28,zh - 黄色,,0,0,0,,最后, 游戏本身很好玩, 这点也很重要
Dialogue: 0,0:01:59.28,0:02:03.74,en - 白色,,0,0,0,,Sometimes AI programming can feel a bit difficult or dry because of all the math and troubleshooting,
Dialogue: 0,0:01:59.28,0:02:03.74,zh - 黄色,,0,0,0,,因为写人工智能时整天折腾数学和修 bug 太枯燥了
Dialogue: 0,0:02:03.74,0:02:07.31,en - 白色,,0,0,0,,and games can provide a fun motivation to learn all this stuff.
Dialogue: 0,0:02:03.74,0:02:07.31,zh - 黄色,,0,0,0,,游戏至少让这个过程不那么无聊
Dialogue: 0,0:02:07.31,0:02:10.36,en - 白色,,0,0,0,,This is the reason why some of my first AI demos were games.
Dialogue: 0,0:02:07.31,0:02:10.36,zh - 黄色,,0,0,0,,所以我之前做的 AI 演示 视频都用了游戏
Dialogue: 0,0:02:10.36,0:02:14.84,en - 白色,,0,0,0,,For all these reasons, games and computing have a rich history that’s worth diving into
Dialogue: 0,0:02:10.36,0:02:14.84,zh - 黄色,,0,0,0,,游戏和计算机的历史可以追溯到很久以前
Dialogue: 0,0:02:14.84,0:02:17.65,en - 白色,,0,0,0,,For that, let’s go to the Thought Bubble.
Dialogue: 0,0:02:15.84,0:02:17.65,zh - 黄色,,0,0,0,,让我们进入“思维泡泡”
Dialogue: 0,0:02:18.00,0:02:22.66,en - 白色,,0,0,0,,Humans have always been fascinated by the idea that machines could beat us at our own strategy games
Dialogue: 0,0:02:18.00,0:02:22.66,zh - 黄色,,0,0,0,,人类一直想知道  机器能不能在策略游戏中击败我们
Dialogue: 0,0:02:22.66,0:02:26.90,en - 白色,,0,0,0,,In 1770, the inventor Wolfgang von Kempelen revealed an invention
Dialogue: 0,0:02:22.66,0:02:26.90,zh - 黄色,,0,0,0,,1770年, 发明家 "沃尔夫冈•冯•肯佩伦"  \N 向奥地利皇后 "玛丽亚•特蕾西亚" 展示了一项发明
Dialogue: 0,0:02:26.90,0:02:29.29,en - 白色,,0,0,0,, to the Empress Maria Theresa of Austria.
Dialogue: 0,0:02:26.90,0:02:29.29,zh - 黄色,,0,0,0,,1770年, 发明家 "沃尔夫冈•冯•肯佩伦"  \N 向奥地利皇后 "玛丽亚•特蕾西亚" 展示了一项发明
Dialogue: 0,0:02:29.29,0:02:33.59,en - 白色,,0,0,0,,The Mechanical Turk was a clock-like contraption that appeared to play chess.
Dialogue: 0,0:02:29.29,0:02:33.59,zh - 黄色,,0,0,0,,"土耳其行棋傀儡" \N 它看起来好像会下棋
Dialogue: 0,0:02:33.59,0:02:37.81,en - 白色,,0,0,0,,Chess pieces were attached to rods that were hooked into a bathtub-sized box.
Dialogue: 0,0:02:33.59,0:02:37.81,zh - 黄色,,0,0,0,,棋子连着杆子, 杆子连着下面浴缸大小的箱子
Comment: 0,0:02:33.59,0:02:37.81,备注 - 中间,,0,0,0,,注释：实际上土耳其行棋傀儡是一个左手握着超长烟斗的形象，下棋的应该也是这只手。
Dialogue: 0,0:02:37.81,0:02:43.00,en - 白色,,0,0,0,,After Empress Maria made a move on the board,she turned a crank that activated the machine,
Dialogue: 0,0:02:37.81,0:02:43.00,zh - 黄色,,0,0,0,,玛利亚皇后下棋后, 她转动机器的把手, 让机器下棋
Dialogue: 0,0:02:43.00,0:02:44.81,en - 白色,,0,0,0,,which would move chess pieces mechanically.
Dialogue: 0,0:02:43.00,0:02:44.81,zh - 黄色,,0,0,0,,玛利亚皇后下棋后, 她转动机器的把手, 让机器下棋
Dialogue: 0,0:02:44.81,0:02:48.68,en - 白色,,0,0,0,,To her surprise, the machine was able to beat most challengers.
Dialogue: 0,0:02:44.81,0:02:48.68,zh - 黄色,,0,0,0,,她意外的是, 这台机器能打败多数挑战者
Dialogue: 0,0:02:48.68,0:02:51.62,en - 白色,,0,0,0,,However, it was an elaborate hoax and The Mechanical Turk
Dialogue: 0,0:02:48.68,0:02:51.62,zh - 黄色,,0,0,0,,然而这是个骗局  \N "土耳其行棋傀儡" 里面其实藏了一个人
Dialogue: 0,0:02:51.62,0:02:54.23,en - 白色,,0,0,0,,was actually controlled by a person hidden inside!
Dialogue: 0,0:02:51.62,0:02:54.23,zh - 黄色,,0,0,0,,然而这是个骗局  \N "土耳其行棋傀儡" 里面其实藏了一个人
Dialogue: 0,0:02:54.23,0:02:57.76,en - 白色,,0,0,0,,Getting a machine to play chess is actually really complicated.
Dialogue: 0,0:02:54.23,0:02:57.76,zh - 黄色,,0,0,0,,让机器学会下国际象棋是很困难的
Dialogue: 0,0:02:57.76,0:03:02.98,en - 白色,,0,0,0,,So when AI researchers first tried to tackle the problem in the late 1940s and early 1950s,
Dialogue: 0,0:02:57.76,0:03:02.98,zh - 黄色,,0,0,0,,所以研究者在 1940~1950 年刚开始尝试时
Dialogue: 0,0:03:02.98,0:03:05.29,en - 白色,,0,0,0,,they focused on simpler chess situations.
Dialogue: 0,0:03:02.98,0:03:05.29,zh - 黄色,,0,0,0,,用的是简单棋局
Dialogue: 0,0:03:05.29,0:03:08.33,en - 白色,,0,0,0,,Like, games with only a few pieces remaining on the board
Dialogue: 0,0:03:05.29,0:03:08.33,zh - 黄色,,0,0,0,,比如棋盘上只剩几枚棋子,
Dialogue: 0,0:03:08.33,0:03:12.50,en - 白色,,0,0,0,,or full games played on a small 6x6 board without any bishops.
Dialogue: 0,0:03:08.33,0:03:12.50,zh - 黄色,,0,0,0,,或是把棋盘改小, 变成 6 乘 6, 去掉所有象
Dialogue: 0,0:03:12.70,0:03:16.84,en - 白色,,0,0,0,,At the same time, researchers worked on an AI that could play checkers,
Dialogue: 0,0:03:12.70,0:03:16.84,zh - 黄色,,0,0,0,,与此同时，研究人员致力于研究一种可以进行国际跳棋对局的的人工智能，
Dialogue: 0,0:03:16.84,0:03:21.84,en - 白色,,0,0,0,,because checkers looked easier… although it was really almost as complicated.
Dialogue: 0,0:03:16.84,0:03:21.84,zh - 黄色,,0,0,0,,因为国际跳棋看起来更简单...尽管实际上复杂性相去不远。
Dialogue: 0,0:03:21.84,0:03:27.06,en - 白色,,0,0,0,,The first program to play a legitimate game of checkers was built by IBM in 1956.
Dialogue: 0,0:03:21.84,0:03:27.06,zh - 黄色,,0,0,0,,第一个能下国际象棋的程序, 是 IBM 在 1956 年做的.
Dialogue: 0,0:03:27.06,0:03:31.94,en - 白色,,0,0,0,,And, in a classic cold war move, two programs that could play a full game of chess
Dialogue: 0,0:03:27.06,0:03:31.94,zh - 黄色,,0,0,0,,由于当时冷战, 1957 年美国和苏联都在开发能下象棋的程序
Dialogue: 0,0:03:31.94,0:03:36.56,en - 白色,,0,0,0,, were developed in parallel by the US and Russia in 1957.
Dialogue: 0,0:03:31.94,0:03:36.56,zh - 黄色,,0,0,0,,由于当时冷战, 1957 年美国和苏联都在开发能下象棋的程序
Dialogue: 0,0:03:36.56,0:03:40.62,en - 白色,,0,0,0,,But these programs didn’t get good for another 40 years.
Dialogue: 0,0:03:36.56,0:03:40.62,zh - 黄色,,0,0,0,,接下来 40 年, 下棋程序没什么明显进展
Dialogue: 0,0:03:40.62,0:03:45.66,en - 白色,,0,0,0,,Checkers was first, with a program called Chinook which started dominating masters in 1995
Dialogue: 0,0:03:40.62,0:03:45.66,zh - 黄色,,0,0,0,,直到 1995 年, 出现一个叫 Chinook 的程序 \N 碾压国际跳棋比赛
Dialogue: 0,0:03:45.66,0:03:50.45,en - 白色,,0,0,0,,Chess followed when a computer called Deep Blue beat the chessmaster Garry Kasparov in 1997.
Dialogue: 0,0:03:45.66,0:03:50.45,zh - 黄色,,0,0,0,,1997 年, 国际象棋也沦陷了 \N  "深蓝"击败了国际象棋大师 加里•卡斯帕罗夫
Dialogue: 0,0:03:51.82,0:03:53.04,en - 白色,,0,0,0,,Thanks Thought Bubble.
Dialogue: 0,0:03:51.82,0:03:53.04,zh - 黄色,,0,0,0,,谢了思维泡泡
Dialogue: 0,0:03:53.04,0:03:56.09,en - 白色,,0,0,0,,Since then, strategy games have been mastered one-by-one,
Dialogue: 0,0:03:53.04,0:03:56.09,zh - 黄色,,0,0,0,,从那时起, 策略游戏一个个被攻克
Dialogue: 0,0:03:56.09,0:03:59.42,en - 白色,,0,0,0,, with the most recent victories over humans at Go in 2017,
Dialogue: 0,0:03:56.09,0:03:59.42,zh - 黄色,,0,0,0,,2017年是围棋 \N 2018年是"Dota 2" \N 2019年是"星际争霸2"
Dialogue: 0,0:03:59.42,0:04:03.68,en - 白色,,0,0,0,,DOTA 2 in 2018, and Starcraft II in 2019.
Dialogue: 0,0:03:59.42,0:04:03.68,zh - 黄色,,0,0,0,,2017年是围棋 \N 2018年是"Dota 2" \N 2019年是"星际争霸2"
Dialogue: 0,0:04:03.68,0:04:09.30,en - 白色,,0,0,0,,Okay, so the best way to understand the difficulty of teaching AI to play games is through an example
Dialogue: 0,0:04:03.68,0:04:09.30,zh - 黄色,,0,0,0,,为了理解教人工智能玩游戏的难度有多高 \N 我们举个例子
Dialogue: 0,0:04:09.30,0:04:12.00,en - 白色,,0,0,0,,Oh John Green Bot.
Dialogue: 0,0:04:09.30,0:04:12.00,zh - 黄色,,0,0,0,,约翰•格林机器人
Dialogue: 0,0:04:15.34,0:04:20.24,en - 白色,,0,0,0,,So let’s start with a really simple goal: teaching John-Green-bot to play tic-tac-toe.
Dialogue: 0,0:04:15.34,0:04:20.24,zh - 黄色,,0,0,0,,我们从简单的开始, 教"约翰•格林机器人"玩井字棋
Dialogue: 0,0:04:28.04,0:04:30.66,en - 白色,,0,0,0,,One of the ways that we can think about playing tic-tac-toe
Dialogue: 0,0:04:28.04,0:04:30.66,zh - 黄色,,0,0,0,,一种思路是, 把井字棋的所有可能状态, \N  从开始到结束的状态, 看成树的分支结构
Dialogue: 0,0:04:30.66,0:04:32.71,en - 白色,,0,0,0,, is as a tree with all the possible moves
Dialogue: 0,0:04:30.66,0:04:32.71,zh - 黄色,,0,0,0,,一种思路是, 把井字棋的所有可能状态, \N  从开始到结束的状态, 看成树的分支结构
Dialogue: 0,0:04:32.71,0:04:35.38,en - 白色,,0,0,0,,from any given state of what the game board looks like.
Dialogue: 0,0:04:32.71,0:04:35.38,zh - 黄色,,0,0,0,,一种思路是, 把井字棋的所有可能状态, \N  从开始到结束的状态, 看成树的分支结构
Dialogue: 0,0:04:35.38,0:04:39.25,en - 白色,,0,0,0,,For example, if this is the current game state, it’s John-Green-bot’s turn
Dialogue: 0,0:04:35.38,0:04:39.25,zh - 黄色,,0,0,0,,比如这是当前状态, 现在该 约翰•格林机器人 下棋了
Dialogue: 0,0:04:39.25,0:04:42.65,en - 白色,,0,0,0,,and he’s using X. there are three places he can go.
Dialogue: 0,0:04:39.25,0:04:42.65,zh - 黄色,,0,0,0,,它用的是 X, 那么有 3 个地方可以落子
Dialogue: 0,0:04:42.65,0:04:46.68,en - 白色,,0,0,0,,We can draw a tree representing possible outcomes for each of these options,
Dialogue: 0,0:04:42.65,0:04:46.68,zh - 黄色,,0,0,0,,我们可以画一棵树, 代表所有可能性, 以及对手的选项
Dialogue: 0,0:04:46.68,0:04:51.00,en - 白色,,0,0,0,,and all of the options his opponent (me, or anyone else) can take:
Dialogue: 0,0:04:46.68,0:04:51.00,zh - 黄色,,0,0,0,,我们可以画一棵树, 代表所有可能性, 以及对手的选项
Dialogue: 0,0:04:51.00,0:04:54.85,en - 白色,,0,0,0,,Because computers think with numbers, each outcome can be assigned a reward
Dialogue: 0,0:04:51.00,0:04:54.85,zh - 黄色,,0,0,0,,因为计算机只明白数字 \N 我们可以给不同结果指定不同数字
Dialogue: 0,0:04:54.85,0:04:58.98,en - 白色,,0,0,0,,a number like a 1 for a win, and -1 for a loss or tie.
Dialogue: 0,0:04:54.85,0:04:58.98,zh - 黄色,,0,0,0,,比如 1 代表赢，-1 代表输或平局
Dialogue: 0,0:04:58.98,0:05:03.26,en - 白色,,0,0,0,,Basically, John-Green-bot will need to search through the tree of possibilities to find his win.
Dialogue: 0,0:04:58.98,0:05:03.26,zh - 黄色,,0,0,0,,约翰•格林机器人 要搜索所有可能性 才能获胜
Dialogue: 0,0:05:03.26,0:05:07.20,en - 白色,,0,0,0,,To decide which choice to make, John-Green-bot will assume that in each tree,
Dialogue: 0,0:05:03.26,0:05:07.20,zh - 黄色,,0,0,0,,为了做决定, 约翰•格林机器人 需要假设 \N 自己和对手都会做出最好的决定
Dialogue: 0,0:05:07.20,0:05:10.80,en - 白色,,0,0,0,,both he AND his opponent will make the best possible choices.
Dialogue: 0,0:05:07.20,0:05:10.80,zh - 黄色,,0,0,0,,为了做决定, 约翰•格林机器人 需要假设 \N 自己和对手都会做出最好的决定
Dialogue: 0,0:05:10.80,0:05:14.37,en - 白色,,0,0,0,,In other words, his policy (or his framework for making decisions)
Dialogue: 0,0:05:10.80,0:05:14.37,zh - 黄色,,0,0,0,,换句话说, 它的策略 (或者说做决定的思路) 是
Dialogue: 0,0:05:14.37,0:05:18.73,en - 白色,,0,0,0,, will alternate between choosing the branch that will maximize the outcome of winning on his turn,
Dialogue: 0,0:05:15.44,0:05:18.73,zh - 黄色,,0,0,0,,要么选的分支 自己赢的机会最大
Dialogue: 0,0:05:18.73,0:05:22.66,en - 白色,,0,0,0,, and minimize the outcome of his opponent winning on their turn.
Dialogue: 0,0:05:18.73,0:05:22.66,zh - 黄色,,0,0,0,,要么选的分支 对方赢的机会最小
Dialogue: 0,0:05:22.66,0:05:24.76,en - 白色,,0,0,0,,This is called the minimax algorithm.
Dialogue: 0,0:05:22.66,0:05:24.76,zh - 黄色,,0,0,0,,这叫 "极小化极大算法"
Dialogue: 0,0:05:22.66,0:05:24.76,备注 - 中间,,0,0,0,,译名 "极小化极大算法" 来自维基百科
Dialogue: 0,0:05:24.76,0:05:27.93,en - 白色,,0,0,0,,Then, each game state can be assigned a value
Dialogue: 0,0:05:25.13,0:05:27.93,zh - 黄色,,0,0,0,,然后给每个游戏状态分配一个值，
Dialogue: 0,0:05:27.93,0:05:31.01,en - 白色,,0,0,0,,based on how likely it leads to John-Green-bot winning,
Dialogue: 0,0:05:27.93,0:05:31.01,zh - 黄色,,0,0,0,,代表这个状态让 约翰•格林机器人 获胜的可能性
Dialogue: 0,0:05:31.01,0:05:34.48,en - 白色,,0,0,0,,and he can decide which move to make based on his policy.
Dialogue: 0,0:05:31.01,0:05:34.48,zh - 黄色,,0,0,0,,然后就可以决定下一步怎么走了
Dialogue: 0,0:05:34.48,0:05:40.29,en - 白色,,0,0,0,,Looking at this tree, John-Green-bot will always pick option 1.0, and win the game!
Dialogue: 0,0:05:34.48,0:05:40.29,zh - 黄色,,0,0,0,,对于这颗树, 约翰•格林机器人 肯定选 1.0  然后获胜
Dialogue: 0,0:05:40.29,0:05:45.33,en - 白色,,0,0,0,,Of course, this was a pretty small tree because we were looking at a game in progress.
Dialogue: 0,0:05:40.29,0:05:45.33,zh - 黄色,,0,0,0,,当然, 这棵树很小, 因为游戏已经开始了
Dialogue: 0,0:05:45.33,0:05:48.07,en - 白色,,0,0,0,,To draw the whole tic-tac-toe tree from beginning to end,
Dialogue: 0,0:05:45.33,0:05:48.07,zh - 黄色,,0,0,0,,如果画出从开始到结束的全部可能状态 \N 一共约 25 万个状态
Dialogue: 0,0:05:48.07,0:05:52.46,en - 白色,,0,0,0,,we would need to represent about 250,000 boards.
Dialogue: 0,0:05:48.07,0:05:52.46,zh - 黄色,,0,0,0,,如果画出从开始到结束的全部可能状态 \N 一共约 25 万个状态
Dialogue: 0,0:05:52.46,0:05:56.41,en - 白色,,0,0,0,,Now, that seems like a lot, but it would take like a half a second
Dialogue: 0,0:05:52.46,0:05:56.41,zh - 黄色,,0,0,0,,看起来很多, 但对现代计算机来说, 差不多半秒就够了
Dialogue: 0,0:05:56.41,0:05:59.20,en - 白色,,0,0,0,,for a powerful modern computer to compute this many options.
Dialogue: 0,0:05:56.41,0:05:59.20,zh - 黄色,,0,0,0,,看起来很多, 但对现代计算机来说, 差不多半秒就够了
Dialogue: 0,0:05:59.20,0:06:02.88,en - 白色,,0,0,0,,By laying out all the possibilities and taking the paths that led to a win,
Dialogue: 0,0:05:59.20,0:06:02.88,zh - 黄色,,0,0,0,,通过列出所有可能性, 然后选一条最可能获胜的路 \N 约翰•格林机器人 学会了井字棋
Dialogue: 0,0:06:02.88,0:06:05.49,en - 白色,,0,0,0,,John-Green-bot can solve tic-tac-toe.
Dialogue: 0,0:06:02.88,0:06:05.49,zh - 黄色,,0,0,0,,通过列出所有可能性, 然后选一条最可能获胜的路 \N 约翰•格林机器人 学会了井字棋
Dialogue: 0,0:06:08.69,0:06:11.89,en - 白色,,0,0,0,,This means that John-Green-bot will always achieve the best possible outcome,
Dialogue: 0,0:06:08.69,0:06:11.89,zh - 黄色,,0,0,0,,不管对方怎么下棋,  \N 约翰•格林机器人都会选最有利于自己的一步
Dialogue: 0,0:06:11.89,0:06:15.86,en - 白色,,0,0,0,,either a win or a tie, no matter how his opponent plays.
Dialogue: 0,0:06:11.89,0:06:15.86,zh - 黄色,,0,0,0,,从而获胜或者打平.
Dialogue: 0,0:06:15.86,0:06:18.54,en - 白色,,0,0,0,,Thanks John Green Bot.
Dialogue: 0,0:06:15.86,0:06:18.54,zh - 黄色,,0,0,0,,谢啦 约翰•格林机器人
Dialogue: 0,0:06:21.23,0:06:24.02,en - 白色,,0,0,0,,But we can’t solve all games this way.
Dialogue: 0,0:06:21.23,0:06:24.02,zh - 黄色,,0,0,0,,但不是所有游戏都可以这样做
Dialogue: 0,0:06:24.02,0:06:28.40,en - 白色,,0,0,0,,Checkers, for example, has about 10 to the 20th power board states.
Dialogue: 0,0:06:24.02,0:06:28.40,zh - 黄色,,0,0,0,,举个例子, 国际跳棋大约有 10    种状态.
Dialogue: 0,0:06:24.02,0:06:28.40,zh - 黄色 - 指数,,0,0,0,,{\pos(1250.667,957.333)} 20
Dialogue: 0,0:06:28.40,0:06:31.16,en - 白色,,0,0,0,,or 10 followed by 20 zeros.
Dialogue: 0,0:06:28.40,0:06:31.16,zh - 黄色,,0,0,0,,或者说 10 后面跟着 20 个 0 \N 比地球上的沙粒还多
Dialogue: 0,0:06:31.16,0:06:34.91,en - 白色,,0,0,0,,That’s more board states than there are grains of sand on Earth!
Dialogue: 0,0:06:31.16,0:06:34.91,zh - 黄色,,0,0,0,,或者说 10 后面跟着 20 个 0 \N 比地球上的沙粒还多
Dialogue: 0,0:06:34.91,0:06:38.04,en - 白色,,0,0,0,,Chess has 10 to the 50th power board states.
Dialogue: 0,0:06:34.91,0:06:38.04,zh - 黄色,,0,0,0,,国际象棋有 10   种状态
Dialogue: 0,0:06:34.91,0:06:38.04,zh - 黄色 - 指数,,0,0,0,,{\pos(1061.333,952)}50
Dialogue: 0,0:06:38.04,0:06:41.75,en - 白色,,0,0,0,,And Go has 10 to the 250th power board states.
Dialogue: 0,0:06:38.04,0:06:41.75,zh - 黄色,,0,0,0,,围棋有 10     种状态
Dialogue: 0,0:06:38.04,0:06:41.75,zh - 黄色 - 指数,,0,0,0,,{\pos(1005.334,960)}250
Dialogue: 0,0:06:41.75,0:06:44.25,en - 白色,,0,0,0,,To put those huge numbers into perspective,
Dialogue: 0,0:06:41.75,0:06:44.25,zh - 黄色,,0,0,0,,为了直观理解这些数字
Dialogue: 0,0:06:44.25,0:06:48.26,en - 白色,,0,0,0,,there are only 10 to the 80th atoms in the entire known universe!
Dialogue: 0,0:06:44.25,0:06:48.26,zh - 黄色,,0,0,0,,已知宇宙里的所有原子 也只有10    次方个
Dialogue: 0,0:06:44.25,0:06:48.26,zh - 黄色 - 指数,,0,0,0,,{\pos(1298.667,965.333)}80
Dialogue: 0,0:06:48.26,0:06:50.84,en - 白色,,0,0,0,,Computer scientists have theorized that it would be impossible
Dialogue: 0,0:06:48.26,0:06:50.84,zh - 黄色,,0,0,0,,计算机科学家们证明了由于物理定律的限制 \N 传统计算机无法处理这么大量的计算
Dialogue: 0,0:06:50.84,0:06:55.15,en - 白色,,0,0,0,, for conventional computers to calculate this many states due to the laws of physics.
Dialogue: 0,0:06:50.84,0:06:55.15,zh - 黄色,,0,0,0,,计算机科学家们证明了由于物理定律的限制 \N 传统计算机无法处理这么大量的计算
Dialogue: 0,0:06:55.15,0:07:00.05,en - 白色,,0,0,0,,Like, for example, if you combined all planets and stars and everything in the whole universe
Dialogue: 0,0:06:55.15,0:07:00.05,zh - 黄色,,0,0,0,,就算把行星, 恒星和宇宙里所有东西 \N 都塞进一台超级计算机 也算不了围棋状态
Dialogue: 0,0:07:00.05,0:07:05.48,en - 白色,,0,0,0,,into a single supercomputer, it still wouldn’t be powerful enough to solve the game of Go.
Dialogue: 0,0:07:00.05,0:07:05.48,zh - 黄色,,0,0,0,,就算把行星, 恒星和宇宙里所有东西 \N 都塞进一台超级计算机 也算不了围棋状态
Dialogue: 0,0:07:05.48,0:07:10.35,en - 白色,,0,0,0,,But some people have hope that quantum computers may be able to get there one day...
Dialogue: 0,0:07:05.48,0:07:10.35,zh - 黄色,,0,0,0,,有人期望量子计算机 以后能解决这个问题
Dialogue: 0,0:07:10.35,0:07:13.91,en - 白色,,0,0,0,,So, if figuring out all of the board states could be mathematically impossible,
Dialogue: 0,0:07:10.35,0:07:13.91,zh - 黄色,,0,0,0,,如果从数学角度来说 无法计算所有棋盘状态 \N  那么计算机是怎么在 国际象棋 和 围棋 中击败人类大师的呢?
Dialogue: 0,0:07:13.91,0:07:17.97,en - 白色,,0,0,0,,how did computers beat the number one ranked human masters in Chess and Go?
Dialogue: 0,0:07:13.91,0:07:17.97,zh - 黄色,,0,0,0,,如果从数学角度来说 无法计算所有棋盘状态 \N  那么计算机是怎么在 国际象棋 和 围棋 中击败人类大师的呢?
Dialogue: 0,0:07:17.97,0:07:20.87,en - 白色,,0,0,0,,Many modern systems, including Google’s Alpha Go computer
Dialogue: 0,0:07:17.97,0:07:20.87,zh - 黄色,,0,0,0,,很多现代 AI 系统 \N 包括 2017 年在围棋中击败人类的谷歌 Alpha Go
Dialogue: 0,0:07:20.87,0:07:23.83,en - 白色,,0,0,0,,that beat a human master in Go in 2017,
Dialogue: 0,0:07:20.87,0:07:23.83,zh - 黄色,,0,0,0,,很多现代 AI 系统 \N 包括 2017 年在围棋中击败人类的谷歌 Alpha Go
Dialogue: 0,0:07:23.83,0:07:26.96,en - 白色,,0,0,0,,use an algorithm called Monte Carlo Tree Search.
Dialogue: 0,0:07:23.83,0:07:26.96,zh - 黄色,,0,0,0,,都用了一种算法叫 "蒙特卡洛树搜索"
Dialogue: 0,0:07:26.96,0:07:31.60,en - 白色,,0,0,0,,Monte Carlo is a famous casino, so whenever you see the term “monte carlo,” it’s
Dialogue: 0,0:07:26.96,0:07:31.60,zh - 黄色,,0,0,0,,蒙特卡洛是个有名的赌场 \N 只要看见"蒙特卡洛"这个词, 这个算法八成用到了"随机"和"概率计算"
Dialogue: 0,0:07:31.60,0:07:36.54,en - 白色,,0,0,0,,a good bet that the algorithm will be using randomness and chance to solve a problem.
Dialogue: 0,0:07:31.60,0:07:36.54,zh - 黄色,,0,0,0,,蒙特卡洛是个有名的赌场 \N 只要看见"蒙特卡洛"这个词, 这个算法八成用到了"随机"和"概率计算"
Dialogue: 0,0:07:36.54,0:07:40.89,en - 白色,,0,0,0,,Combining Monte Carlo randomness and regular tree search like minimax,
Dialogue: 0,0:07:36.54,0:07:40.89,zh - 黄色,,0,0,0,,结合 "蒙特卡洛" + "极小化极大算法"
Dialogue: 0,0:07:40.89,0:07:44.73,en - 白色,,0,0,0,,modern game AIs decide which part of the huge tree to search by guessing at odds.
Dialogue: 0,0:07:40.89,0:07:44.73,zh - 黄色,,0,0,0,,人工智能可以猜测, 应该搜索树里面的哪一个部分
Dialogue: 0,0:07:44.73,0:07:49.32,en - 白色,,0,0,0,,Basically, they want higher odds that the part of the game tree they search will lead to win.
Dialogue: 0,0:07:44.73,0:07:49.32,zh - 黄色,,0,0,0,,基本上，它们会追求更高的胜率的选项，即所搜索的那部分游戏树将通向胜利。
Dialogue: 0,0:07:49.32,0:07:53.36,en - 白色,,0,0,0,,But these aren’t just random guesses like we would make in many casino games,
Dialogue: 0,0:07:49.32,0:07:53.36,zh - 黄色,,0,0,0,,但这不是我们在赌场赌钱那样瞎猜，人工智能系统
Dialogue: 0,0:07:53.36,0:07:56.37,en - 白色,,0,0,0,, AI systems can simulate millions of “what-if” scenarios
Dialogue: 0,0:07:53.36,0:07:56.37,zh - 黄色,,0,0,0,,可以模拟数百万种“假设”场景，并使用数学工具
Dialogue: 0,0:07:56.37,0:07:58.74,zh - 黄色,,0,0,0,, and use math to estimate the likelihood of winning
Dialogue: 0,0:07:58.74,0:08:00.91,en - 白色,,0,0,0,,if they choose one path or another.
Dialogue: 0,0:07:58.19,0:08:00.91,zh - 黄色,,0,0,0,,对选择其中某条路径的取胜可能性进行估算。
Dialogue: 0,0:08:00.91,0:08:04.79,en - 白色,,0,0,0,,In each “what-if” scenario, the AI considers making one particular move
Dialogue: 0,0:08:00.91,0:08:04.79,zh - 黄色,,0,0,0,,在每一个假设场景中，人工智能会考虑一个特定的落子方法，
Dialogue: 0,0:08:04.79,0:08:09.09,en - 白色,,0,0,0,, and then simulates playing a large number of (but not all) possible games,
Dialogue: 0,0:08:04.79,0:08:09.09,zh - 黄色,,0,0,0,,然后对大量可能产生的对局（但不是所有的可能性）进行模拟，这其中下一步棋的落子是随机选择的。
Dialogue: 0,0:08:09.09,0:08:11.38,en - 白色,,0,0,0,,where the next moves are chosen at random。
Dialogue: 0,0:08:11.38,0:08:13.38,en - 白色,,0,0,0,,By averaging these possible outcomes, 
Dialogue: 0,0:08:11.38,0:08:13.38,zh - 黄色,,0,0,0,,通过平均所有可能的结果，人工智能将评估怎样的落子是“好的”
Dialogue: 0,0:08:13.38,0:08:16.64,en - 白色,,0,0,0,,the AI estimates how “good” that particular move is.
Dialogue: 0,0:08:16.64,0:08:19.31,en - 白色,,0,0,0,,It’s so much faster to estimate a handful of choices than 
Dialogue: 0,0:08:16.64,0:08:19.31,zh - 黄色,,0,0,0,,并且对一小部分选项进行评估远比挨个计算游戏树中每一种可能性快得多。
Dialogue: 0,0:08:19.31,0:08:22.06,en - 白色,,0,0,0,,exhaustively calculate each branch of the game tree.
Dialogue: 0,0:08:22.06,0:08:25.15,en - 白色,,0,0,0,,And some computers can even do this estimation in real time.
Dialogue: 0,0:08:22.06,0:08:25.15,zh - 黄色,,0,0,0,,有些电脑甚至能够进行实时进行估算。
Dialogue: 0,0:08:25.15,0:08:27.69,en - 白色,,0,0,0,,One example of this is Google’s DeepMind
Dialogue: 0,0:08:25.15,0:08:27.69,zh - 黄色,,0,0,0,,一个例子就是谷歌的DeepMind于2019年在星际争霸2中击败了人类职业玩家，
Dialogue: 0,0:08:27.69,0:08:31.61,en - 白色,,0,0,0,,which defeated human professional players at Starcraft II in 2019
Dialogue: 0,0:08:31.61,0:08:33.90,en - 白色,,0,0,0,,where time is very critical.
Dialogue: 0,0:08:31.61,0:08:33.90,zh - 黄色,,0,0,0,,这个时间节点是非常关键的。
Dialogue: 0,0:08:33.95,0:08:39.87,en - 白色,,0,0,0,,Of course, Starcraft II, Go, and Tic-Tac-Toe aren’t all the types of games that humans plays.
Dialogue: 0,0:08:33.95,0:08:39.87,zh - 黄色,,0,0,0,,当然星际争霸2, 围棋, 井字棋并不能代表所有人类玩的游戏类型。
Dialogue: 0,0:08:39.87,0:08:43.90,en - 白色,,0,0,0,,Other games require other strategies and have other computational challenges:
Dialogue: 0,0:08:39.87,0:08:43.90,zh - 黄色,,0,0,0,,其他游戏需要其他的策略，也面临着其他的计算上的挑战：
Dialogue: 0,0:08:43.90,0:08:46.58,en - 白色,,0,0,0,,IBM’s Watson question-answering system was able to
Dialogue: 0,0:08:43.90,0:08:46.58,zh - 黄色,,0,0,0,,IBM的Watson问答系统曾击败了人类Jeopardy！他是2011年两场电视转播比赛的冠军。
Dialogue: 0,0:08:46.58,0:08:50.50,zh - 黄色,,0,0,0,, beat human Jeopardy champions in two televised matches in 2011.
Dialogue: 0,0:08:50.50,0:08:53.22,en - 白色,,0,0,0,,Watson listened for keywords in the clue and tried to 
Dialogue: 0,0:08:50.50,0:08:53.22,zh - 黄色,,0,0,0,,Watson在线索中侧耳倾听关键词，并尝试使用知识图谱来找出答案。
Dialogue: 0,0:08:53.22,0:08:55.72,en - 白色,,0,0,0,,use a knowledge graph to figure out responses.
Dialogue: 0,0:08:55.72,0:08:58.93,en - 白色,,0,0,0,,And we’ll talk more about knowledge graphs in a future episode.
Dialogue: 0,0:08:55.72,0:08:58.93,zh - 黄色,,0,0,0,,我们将会在今后的节目中就知识图谱进行探讨。
Dialogue: 0,0:08:58.93,0:09:02.85,en - 白色,,0,0,0,,Watson wasn’t perfect and struggled a bit with context.
Dialogue: 0,0:08:58.93,0:09:02.85,zh - 黄色,,0,0,0,,Watson并不是完美的，它无法很好的处理上下文问题。
Dialogue: 0,0:09:02.85,0:09:05.44,en - 白色,,0,0,0,,For example, it famously guessed “What is Toronto?”
Dialogue: 0,0:09:02.86,0:09:05.44,zh - 黄色,,0,0,0,,例如，比较有名的是它在回答“什么是多伦多”这个问题时，猜测答案在”美国城市“这个类别里。
Dialogue: 0,0:09:05.44,0:09:07.73,zh - 黄色,,0,0,0,, on something in the category “US Cities."
Dialogue: 0,0:09:07.73,0:09:11.98,en - 白色,,0,0,0,,But Watson was still able to do better than human contestants overall.
Dialogue: 0,0:09:07.73,0:09:11.98,zh - 黄色,,0,0,0,,但Watson总体来说仍然做的比人类选手更好。
Dialogue: 0,0:09:11.98,0:09:16.74,en - 白色,,0,0,0,,Evolutionary neural networks use the environment as an input, like reinforcement learning.
Dialogue: 0,0:09:11.98,0:09:16.74,zh - 黄色,,0,0,0,,进化神经网络会将环境作为输入，就好像强化学习那样。
Dialogue: 0,0:09:16.74,0:09:21.29,en - 白色,,0,0,0,,But this approach introduces multiple agents who try multiple neural network structures,
Dialogue: 0,0:09:16.74,0:09:21.29,zh - 黄色,,0,0,0,,但是这种方法采用多个智能体，让它们会尝试多种神经网络结构，
Dialogue: 0,0:09:21.29,0:09:24.75,en - 白色,,0,0,0,,and then build on successful ones for the next generation.
Dialogue: 0,0:09:21.69,0:09:24.75,zh - 黄色,,0,0,0,,然后基于成功的那个构建下一代神经网络构。
Dialogue: 0,0:09:24.75,0:09:29.88,en - 白色,,0,0,0,,Sort of like animals, the ones that are better at surviving get to pass on their genes.
Dialogue: 0,0:09:24.75,0:09:29.88,zh - 黄色,,0,0,0,,与动物有些类似，那些更善于生存的个体会把它们的基因传给下一代。
Dialogue: 0,0:09:29.88,0:09:34.54,en - 白色,,0,0,0,,For example, the AI MarIO can learn how to play a Super Mario World level
Dialogue: 0,0:09:30.02,0:09:34.54,zh - 黄色,,0,0,0,,又比如，通过告诉“人工智能马里奥I/O”它能按哪些键以及在关卡中越往右代表着越”好“这两件事，
Dialogue: 0,0:09:34.54,0:09:38.47,en - 白色,,0,0,0,, by telling MarIO what buttons it can push
Dialogue: 0,0:09:34.54,0:09:38.47,zh - 黄色,,0,0,0,,它就能学会如何游玩“超级马里奥：世界”中的一个关卡。
Dialogue: 0,0:09:38.47,0:09:39.47,zh - 黄色,,0,0,0,,and that getting farther to the “right” in the level is good.
Dialogue: 0,0:09:39.47,0:09:44.59,en - 白色,,0,0,0,,This AI will start by basically mashing buttons at random,
Dialogue: 0,0:09:39.47,0:09:44.59,zh - 黄色,,0,0,0,,这个人工智能开始只会随机地按一些按键，当其中一些按键能够帮助我们向右走的更远后，
Dialogue: 0,0:09:44.59,0:09:44.59,zh - 黄色,,0,0,0,,but as some button mashes get it farther to the right,
Dialogue: 0,0:09:44.59,0:09:48.32,en - 白色,,0,0,0,,it remembers and learns from those successful attempts.
Dialogue: 0,0:09:44.59,0:09:48.32,zh - 黄色,,0,0,0,,它们会记住这些成功的尝试并从中学习。
Dialogue: 0,0:09:48.32,0:09:52.32,en - 白色,,0,0,0,,In the next lab, we’ll build our own AI to use this approach to crush a video game
Dialogue: 0,0:09:48.32,0:09:52.32,zh - 黄色,,0,0,0,,在下一节实验课，我们将会使用这个方法去打造我们自己的人工智能来通关视频游戏。
Dialogue: 0,0:09:52.32,0:09:55.09,en - 白色,,0,0,0,,that we built where John-Green bot destroys trash.
Dialogue: 0,0:09:52.32,0:09:55.09,zh - 黄色,,0,0,0,,机器John-Green会在那里摧毁一切垃圾。
Dialogue: 0,0:09:55.09,0:09:59.77,en - 白色,,0,0,0,,So, are there any games that are safe to play,
Dialogue: 0,0:09:55.09,0:09:59.77,zh - 黄色,,0,0,0,,那么，是否存在一种"安全的"游戏，在其中人类会始终具有优势,
Dialogue: 0,0:09:59.77,0:09:59.77,zh - 黄色,,0,0,0,,where humans will always have an edge
Dialogue: 0,0:09:59.77,0:10:01.60,en - 白色,,0,0,0,, and AI won’t be able to beat us?
Dialogue: 0,0:09:59.77,0:10:01.60,zh - 黄色,,0,0,0,,而人工智能无法击败我们呢？
Dialogue: 0,0:10:01.60,0:10:05.97,en - 白色,,0,0,0,,Computers definitely seem to struggle with parts of language
Dialogue: 0,0:10:01.60,0:10:05.97,zh - 黄色,,0,0,0,,毫无疑问计算机很难应对言语中的幽默、讽刺、隐喻以及文字游戏。
Dialogue: 0,0:10:05.97,0:10:06.97,zh - 黄色,,0,0,0,, like humor, irony, metaphor,and wordplay.
Dialogue: 0,0:10:06.97,0:10:11.29,en - 白色,,0,0,0,,Computers also aren’t great at understanding and predicting real people,
Dialogue: 0,0:10:06.97,0:10:11.29,zh - 黄色,,0,0,0,,计算机也不擅于理解和预测真人的行动，他们并不能总是采取最佳行动，
Dialogue: 0,0:10:11.29,0:10:15.38,en - 白色,,0,0,0,, who don’t always act “optimally,”
Dialogue: 0,0:10:11.29,0:10:15.38,zh - 黄色,,0,0,0,,所以社交游戏对于它们来说也可能更难。
Dialogue: 0,0:10:15.38,0:10:15.38,zh - 黄色,,0,0,0,,so social games could be more difficult too.
Dialogue: 0,0:10:15.38,0:10:20.39,en - 白色,,0,0,0,,But AI systems are finding some success in bluffing games like online poker,
Dialogue: 0,0:10:15.38,0:10:20.39,zh - 黄色,,0,0,0,,但是人工智能系统在像在线扑克这种尔虞我诈的游戏中找到了一些取胜之道，
Dialogue: 0,0:10:20.39,0:10:22.54,en - 白色,,0,0,0,,so it’s important not to underestimate them.
Dialogue: 0,0:10:20.39,0:10:22.54,zh - 黄色,,0,0,0,,所以我们绝不应低估它们。
Dialogue: 0,0:10:22.54,0:10:29.82,en - 白色,,0,0,0,,John Green Bot: All - in.
Dialogue: 0,0:10:22.54,0:10:29.82,zh - 黄色,,0,0,0,,机器John-Green：全部押上
Dialogue: 0,0:10:29.82,0:10:34.64,en - 白色,,0,0,0,,Computers might also struggle with creativity or surprise,
Dialogue: 0,0:10:29.82,0:10:34.64,zh - 黄色,,0,0,0,,或许计算机也很难产生创造性或带给人惊喜，
Dialogue: 0,0:10:34.65,0:10:37.41,en - 白色,,0,0,0,,because there’s not a really clear way to assign values to states.
Dialogue: 0,0:10:34.65,0:10:37.41,zh - 黄色,,0,0,0,,因为没有一个明确的方法为这样的状态分配对应的值。
Dialogue: 0,0:10:37.41,0:10:41.70,en - 白色,,0,0,0,,It’s difficult to assign a number to “how creative” something is,
Dialogue: 0,0:10:37.41,0:10:41.70,zh - 黄色,,0,0,0,,与“在马里奥关卡上尽可能往右走”或“在象棋游戏中取得胜利”相比，
Dialogue: 0,0:10:41.70,0:10:46.00,en - 白色,,0,0,0,, compared to saying “go as far right as you can in the Mario level”
Dialogue: 0,0:10:41.70,0:10:46.00,zh - 黄色,,0,0,0,,很难为某事“有多创新”分配一个数值（进行衡量）。
Dialogue: 0,0:10:46.00,0:10:47.12,zh - 黄色,,0,0,0,, or “achieve a winning state in a chess game.”
Dialogue: 0,0:10:47.12,0:10:51.09,en - 白色,,0,0,0,,So, considering all of that, maybe games like charades would be pretty stacked for a human victory.
Dialogue: 0,0:10:47.12,0:10:51.09,zh - 黄色,,0,0,0,,考虑到这些，也许在像 “你来比划我来猜”这种游戏中，人类的优势依旧相当稳固吧。
Dialogue: 0,0:10:52.09,0:10:54.92,en - 白色,,0,0,0,,Or… what about pictionary?
Dialogue: 0,0:10:52.09,0:10:54.92,zh - 黄色,,0,0,0,,或者…  像看图说词这种游戏也行吧？
Dialogue: 0,0:10:54.92,0:10:56.52,en - 白色,,0,0,0,,Hide-and seek???
Dialogue: 0,0:10:54.92,0:10:56.52,zh - 黄色,,0,0,0,,躲猫猫???
Dialogue: 0,0:10:56.53,0:11:00.31,en - 白色,,0,0,0,,We’d love to hear in the comments what games you think are safe from AI.
Dialogue: 0,0:10:56.53,0:11:00.31,zh - 黄色,,0,0,0,,我们很想在评论中看到您写下您所认为的不受人工智能影响的游戏。
Dialogue: 0,0:11:00.31,0:11:04.57,en - 白色,,0,0,0,,But in the next episode, which is another lab, we’ll program an AI system to learn
Dialogue: 0,0:11:00.31,0:11:04.57,zh - 黄色,,0,0,0,,不过在下一集实验课中，我们将会编写一个人工智能系统，
Dialogue: 0,0:11:04.57,0:11:09.46,en - 白色,,0,0,0,,how to play an arcade-like game… and I’ll beg John Green bot for my poker money back.
Dialogue: 0,0:11:04.57,0:11:09.46,zh - 黄色,,0,0,0,,去学玩街机之类的游戏...我也会求机器John-Green把我的零花钱还回来。
Dialogue: 0,0:11:09.46,0:11:10.79,en - 白色,,0,0,0,,I’ll see ya then
Dialogue: 0,0:11:09.46,0:11:10.79,zh - 黄色,,0,0,0,,下次见
